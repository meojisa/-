document.addEventListener('DOMContentLoaded', async () => {
    // –ë–∞–∑–æ–≤—ã–π URL API (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    const API_BASE_URL = 'https://your-api-domain.com/api';
    
    // –ü–æ–ª—É—á–∞–µ–º ID –∫–Ω–∏–≥–∏ –∏–∑ URL
    const urlParams = new URLSearchParams(window.location.search);
    const bookId = urlParams.get('id');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞
    let bookData = {};
    try {
        const response = await fetch(`${API_BASE_URL}/books/${bookId}`);
        if (!response.ok) throw new Error('–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        bookData = await response.json();
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        document.getElementById('bookTitle').textContent = bookData.title;
        document.getElementById('bookAuthor').textContent = bookData.author || '–ê–≤—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω';
        document.getElementById('bookYear').textContent = bookData.publication_year || '–ì–æ–¥ –Ω–µ —É–∫–∞–∑–∞–Ω';
        document.getElementById('bookAnnotation').textContent = bookData.annotation || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
        document.getElementById('bookCover').src = bookData.cover_url || 'https://via.placeholder.com/200x300?text=–û–±–ª–æ–∂–∫–∞';
        document.getElementById('pageCount').textContent = bookData.pages || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∏:', error);
        alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–Ω–∏–≥–∏');
        return;
    }

    // –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–Ω–∏–≥–∏
    document.getElementById('toggleDetails').addEventListener('click', function() {
        const detailsDiv = document.getElementById('bookDetails');
        if (detailsDiv.style.display === 'none') {
            if (detailsDiv.innerHTML === '') {
                loadBookDetails(bookData);
            }
            detailsDiv.style.display = 'block';
            this.textContent = '–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏';
        } else {
            detailsDiv.style.display = 'none';
            this.textContent = '–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏';
        }
    });

    function loadBookDetails(book) {
        const detailsHTML = `
            <p><strong>–ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä:</strong> ${book.order_number || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
            <p><strong>–ú–µ—Å—Ç–æ –∏–∑–¥–∞–Ω–∏—è:</strong> ${book.publication_place || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
            <p><strong>–®–∏—Ñ—Ä –£–î–ö/–ë–ë–ö:</strong> ${book.udc_bbk_code || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
            <p><strong>ISBN:</strong> ${book.isbn || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
            <p><strong>–ü–µ—Ä–µ–ø–ª–µ—Ç:</strong> ${book.binding_type || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}</p>
        `;
        document.getElementById('bookDetails').innerHTML = detailsHTML;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PDF.js
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.worker.min.js';
    
    let pdfDoc = null,
        pageNum = 1,
        pageRendering = false,
        pageNumPending = null,
        scale = 1.5;
    
    const canvas = document.getElementById('pdfCanvas');
    const ctx = canvas.getContext('2d');
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ PDF
    async function loadPdf(url) {
        try {
            // –ï—Å–ª–∏ PDF —Ö—Ä–∞–Ω–∏—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
            const pdfUrl = `${API_BASE_URL}/books/${bookId}/pdf`;
            
            const loadingTask = pdfjsLib.getDocument(pdfUrl);
            pdfDoc = await loadingTask.promise;
            
            document.getElementById('totalPages').textContent = pdfDoc.numPages;
            document.getElementById('currentPage').textContent = pageNum;
            
            renderPage(pageNum);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ PDF:', error);
            
            // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            const errorDiv = document.createElement('div');
            errorDiv.className = 'pdf-error';
            errorDiv.innerHTML = `
                <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–Ω–∏–≥—É</p>
                <button class="button primary" id="retryLoad">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</button>
            `;
            document.querySelector('.reader-viewport').appendChild(errorDiv);
            
            document.getElementById('retryLoad').addEventListener('click', () => {
                errorDiv.remove();
                loadPdf(url);
            });
        }
    }
    
    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    function renderPage(num) {
        pageRendering = true;
        
        // –û—á–∏—â–∞–µ–º canvas –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        
        pdfDoc.getPage(num).then(function(page) {
            const viewport = page.getViewport({ scale: scale });
            canvas.height = viewport.height;
            canvas.width = viewport.width;
            
            const renderContext = {
                canvasContext: ctx,
                viewport: viewport
            };
            
            const renderTask = page.render(renderContext);
            
            renderTask.promise.then(function() {
                pageRendering = false;
                if (pageNumPending !== null) {
                    renderPage(pageNumPending);
                    pageNumPending = null;
                }
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                document.getElementById('currentPage').textContent = num;
            });
        }).catch(error => {
            console.error('–û—à–∏–±–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', error);
            pageRendering = false;
        });
    }
    
    // –ü–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü
    function queueRenderPage(num) {
        if (!pdfDoc) {
            console.error('PDF –¥–æ–∫—É–º–µ–Ω—Ç –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return;
        }
        
        if (num < 1 || num > pdfDoc.numPages) {
            console.warn('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
            return;
        }
        
        if (pageRendering) {
            pageNumPending = num;
        } else {
            renderPage(num);
        }
    }
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    document.getElementById('prevPage').addEventListener('click', () => {
        if (pageNum <= 1) return;
        pageNum--;
        queueRenderPage(pageNum);
    });
    
    document.getElementById('nextPage').addEventListener('click', () => {
        if (!pdfDoc || pageNum >= pdfDoc.numPages) return;
        pageNum++;
        queueRenderPage(pageNum);
    });
    
    // –ö–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥" - –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ö–û–î
    const backToCatalogBtn = document.getElementById('backToCatalog');
    if (backToCatalogBtn) {
        backToCatalogBtn.addEventListener('click', function() {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏
            if (document.referrer && document.referrer.includes(window.location.hostname)) {
                window.history.back();
            } else {
                // –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –Ω–µ —Å –Ω–∞—à–µ–≥–æ —Å–∞–π—Ç–∞, –∏–¥–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                window.location.href = 'index.html';
            }
        });
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É"
    const addBookmarkBtn = document.getElementById('addBookmark');
    if (addBookmarkBtn) {
        addBookmarkBtn.addEventListener('click', async () => {
            const token = localStorage.getItem('token');
            if (!token) {
                alert('–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
                return;
            }
            
            try {
                const response = await fetch(`${API_BASE_URL}/bookmarks`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${token}`
                    },
                    body: JSON.stringify({
                        book_id: bookId,
                        page: pageNum
                    })
                });
                
                if (response.ok) {
                    alert('–ó–∞–∫–ª–∞–¥–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!');
                } else {
                    throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
                }
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–ª–∞–¥–∫–∏:', error);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–ª–∞–¥–∫—É');
            }
        });
    }
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
    const themeToggle = document.querySelector('.theme-toggle');
    const body = document.body;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π —Ç–µ–º—ã
    const savedTheme = localStorage.getItem('theme') || 'light';
    body.classList.add(`${savedTheme}-theme`);
    themeToggle.textContent = savedTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
    
    themeToggle.addEventListener('click', () => {
        body.classList.toggle('dark-theme');
        body.classList.toggle('light-theme');
        
        const newTheme = body.classList.contains('dark-theme') ? 'dark' : 'light';
        localStorage.setItem('theme', newTheme);
        themeToggle.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
    });
        // --- –ù–ê–ß–ê–õ–û: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≥–∞–º–±—É—Ä–≥–µ—Ä-–º–µ–Ω—é –¥–ª—è reader.js ---
    const menuToggle = document.querySelector('.menu-toggle');
    const sidebarMenu = document.getElementById('sidebarMenu');
    const closeMenuButton = document.querySelector('.close-menu');
    const sidebarLinks = document.querySelectorAll('.sidebar-menu a');

    if (menuToggle && sidebarMenu && closeMenuButton) { // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é
        menuToggle.addEventListener('click', () => {
            sidebarMenu.classList.add('open');
            document.body.style.overflow = 'hidden'; // –ó–∞–ø—Ä–µ—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–Ω–æ–ø–∫–µ X
        closeMenuButton.addEventListener('click', () => {
            sidebarMenu.classList.remove('open');
            document.body.style.overflow = ''; // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
        document.addEventListener('click', (e) => {
            if (!sidebarMenu.contains(e.target) && !menuToggle.contains(e.target) && sidebarMenu.classList.contains('open')) {
                sidebarMenu.classList.remove('open');
                document.body.style.overflow = '';
            }
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —Å—Å—ã–ª–∫–∞–º –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é
        sidebarLinks.forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ

                const section = link.getAttribute('data-section'); // –ü–æ–ª—É—á–∞–µ–º 'profile-tab', 'favorites-tab' –∏ —Ç.–¥.
                
                // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ index.html, –∏ —Ç–∞–º, –≤ script.js, –º—ã –æ–±—Ä–∞–±–æ—Ç–∞–µ–º —ç—Ç–æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä
                // –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω—É–∂–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏.
                // #profile-section –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –∫ —Ä–∞–∑–¥–µ–ª—É –Ω–∞ index.html
                // ?tab=${section} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è script.js –Ω–∞ index.html –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –≤–∫–ª–∞–¥–∫–∏
                window.location.href = `index.html#profile-section?tab=${section}`;

                sidebarMenu.classList.remove('open'); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é
                document.body.style.overflow = ''; // –†–∞–∑—Ä–µ—à–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
            });
        });
    }
    // –ó–∞–≥—Ä—É–∑–∫–∞ PDF
    loadPdf(bookData.file_url);
});